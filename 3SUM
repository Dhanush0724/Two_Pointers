class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:

        # n = len(nums)
        # res = []
        # s = set()
        # for i in range(n):
        #     for j in range(i+1,n):
        #         for k in range(j+1,n):
        #             triplet = tuple(sorted([nums[i], nums[j], nums[k]]))
        #             if nums[i] + nums[j] + nums[k] == 0:
        #                 if triplet not in s:
        #                     s.add(triplet)
        #                     res.append(list(triplet))
        # return res
        res = []
        nums.sort()
        n = len(nums)
        for i in range(n):
            if i > 0 and nums[i] == nums[i-1]:
                continue
            j = i+1
            k = n -1
            while j < k :
                trisum = nums[i] + nums[j] + nums[k]
                if trisum > 0 :
                    k-=1
                elif trisum < 0 :
                    j+=1
                else :
                    res.append([nums[i],nums[j],nums[k]])
                    j+=1
                    k-=1
                    while j < k and nums[j] == nums[j-1] : j+=1
                    while j < k and nums[k] == nums[k+1] :k-=1
        return res

        
